<project name="zf2-demo" default="help" basedir=".">
    <import file="./vendor/continuousphp/aws-sdk-phing/tasks.xml" />
    
    
    <if>
        <available file="${project.basedir}/build.local.properties" />
        <then>
            <property file="${project.basedir}/build.local.properties" />
        </then>
    </if>
    <property file="${project.basedir}/build.properties" />
    
    <target name="help" description="List available targets">
        <exec executable="vendor/bin/phing"
              passthru="true">
            <arg value="-l"/>
        </exec>
    </target>
    
    <target name="provision-stack"
            description="Provision a stack on AWS" />
    
    <target name="setup" depends="echotest" 
            description="Setup external dependencies and migrate data"/>

    <target name="echotest" description="test echo" >
	<fileset dir="/usr/local/bin/" id="test.files">
          <include name="**/*"/>
        </fileset>
        <echo>
          <fileset refid="test.files"/>
        </echo>
        <echo msg="${db.host}" />
    </target>

    <target name="copyLocal.php" >
      <copy file="/root/continuous-delivery/config/autoload/local.php.dist" tofile="/root/continuous-delivery/config/autoload/local.php" overwrite="true"/>
    </target>

    <target name="copyAllPhpdist" >
      <echo msg="${project.basedir}/config/autoload" />
      <copy todir="${project.basedir}/config/autoload/">
        <fileset dir="${project.basedir}/config/autoload/" casesensitive="yes">

          <include name="**/*.php.dist"/>
        </fileset>
        <mapper type="regexp" from="(.*)\.dist" to="\1" />
      </copy>
    </target>


    <target name="OrmConfig" >
      <echo msg="Fichier ORM global to local" />
      <copy file="${project.basedir}/config/autoload/orm.global.php" tofile="${project.basedir}/config/autoload/orm.local.php" overwrite="true"/>  
          <filterchain>
            <replacetokens>
               <token key="host" value="${db.host}" />
               <token key="user" value="${db.username}" />
               <token key="password" value="${db.password}" />
               <token key="dbname" value="${db.dbname}" />
               <token key="port" value="${db.port}" />
            </replacetokens>
          </filterchain>
    </target>
            
</project>
